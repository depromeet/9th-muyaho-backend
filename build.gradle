buildscript {
    ext {
        springBootVersion = '2.3.8.RELEASE'
    }

    repositories {
        mavenCentral()
    }

    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

subprojects {
    group = 'com.depromeet'

    apply plugin: 'java-library'
    apply plugin: 'eclipse'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'

    sourceCompatibility = '11'

    repositories {
        mavenCentral()
    }

    configurations {
        compileOnly {
            extendsFrom annotationProcessor
        }
    }

    dependencies {
        implementation 'org.springframework.boot:spring-boot-starter-validation'
        implementation 'org.springframework.boot:spring-boot-configuration-processor'
        testImplementation('org.springframework.boot:spring-boot-starter-test')

        // lombok
        compileOnly 'org.projectlombok:lombok'
        annotationProcessor 'org.projectlombok:lombok'

        // ehcache
        implementation('org.springframework.boot:spring-boot-starter-cache')
        implementation group: 'net.sf.ehcache', name: 'ehcache', version: '2.10.3'
    }

    test {
        useJUnitPlatform()
    }
}


def testProjects = [
    project(':muyaho-api'),
    project(':muyaho-domain'),
    project(':muyaho-common')
]

configure(testProjects) {
    apply plugin: 'jacoco'

    jacoco {
        toolVersion = '0.8.5'
    }

    jacocoTestReport {
        executionData(fileTree(project.rootDir.absolutePath).include("**/build/jacoco/*.exec"))

        reports {
            html.enabled true
            xml.enabled true
            csv.enabled false
        }

        for (testProject in testProjects) {
            sourceSets(testProject.sourceSets["main"] as SourceSet)
        }
    }

}

name: CD Production Server

on:
  push:
    branches:
      - master
jobs:
  build:
    runs-on: ubuntu-18.04
    steps:
      - name: Checkout@v2
        uses: actions/checkout@v2

      - name: Get Semantic Versioning
        id: docker-image-version
        run: |
          VERSION=`cat ./version.txt`
          GIT_COMMIT_MSG=`git show -s`
          echo "::set-output name=version::$VERSION"
          echo "::set-output name=git-commit-msg::$GIT_COMMIT_MSG"

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build and push muyaho-api
        id: build
        env:
          DOCKER_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          DOCKER_REPOSITORY: muyaho-api
          IMAGE_TAG: ${{ steps.docker-image-version.outputs.version }}
        run: |
          docker build -t $DOCKER_REGISTRY/$DOCKER_REPOSITORY:$IMAGE_TAG .
          docker tag $DOCKER_REGISTRY/$DOCKER_REPOSITORY:$IMAGE_TAG $DOCKER_REGISTRY/$DOCKER_REPOSITORY:latest
          docker push $DOCKER_REGISTRY/$DOCKER_REPOSITORY:$IMAGE_TAG
          docker push $DOCKER_REGISTRY/$DOCKER_REPOSITORY:latest
          echo "::set-output name=image::$DOCKER_REGISTRY/$DOCKER_REPOSITORY:$IMAGE_TAG"

      - name: Create Release
        id: create-release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GIT_TOKEN }}
        with:
          tag_name: ${{ steps.docker-image-version.outputs.version }}
          release_name: Release ${{ steps.docker-image-version.outputs.version }}
          body: ${{ steps.docker-image-version.outputs.git-commit-msg }}
          draft: false
          prerelease: false

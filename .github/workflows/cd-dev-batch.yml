name: 개발환경 배치 이미지 푸쉬

on:
  push:
    branches:
      - develop
jobs:
  build:
    runs-on: ubuntu-18.04
    steps:
      - name: Checkout@v2
        uses: actions/checkout@v2

      - name: Setup Secret Properties
        env:
          PROFILES: dev
          DB_URI: ${{secrets.JDBC_URI}}
          DB_USERNAME: ${{secrets.DB_USERNAME}}
          DB_PASSWORD: ${{secrets.DB_PASSWORD}}
          DB_DRIVER: ${{secrets.DB_DRIVER}}

          RESOURCE_PWD: muyaho-domain/src/main/resources
        run: |
          echo -e "spring.profiles=$PROFILES\nspring.datasource.hikari.jdbc-url=$DB_URI\nspring.datasource.hikari.username=$DB_USERNAME\nspring.datasource.hikari.password=$DB_PASSWORD\nspring.datasource.hikari.driver-class-name=$DB_DRIVER" > $RESOURCE_PWD/application-rds.properties

      - name: Setup Slack Secret properties
        env:
          PROFILES: dev
          SLACK_URL: ${{secrets.SLACK_URL_DEV}}

          RESOURCE_PWD: muyaho-external/src/main/resources
        run: |
          echo -e "spring.profiles=$PROFILES\nslack.url=$SLACK_URL" > $RESOURCE_PWD/application-slack.properties

      - name: Get dev version
        id: dev-version
        run: |
          VERSION=`cat ./version.txt`-${{ github.run_id }}
          echo "::set-output name=version::$VERSION"

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build and push muyaho-api
        id: build-batch
        env:
          DOCKER_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          DOCKER_REPOSITORY: muyaho-batch
          IMAGE_TAG: ${{ steps.dev-version.outputs.version }}
        run: |
          docker build -t $DOCKER_REGISTRY/$DOCKER_REPOSITORY:$IMAGE_TAG -f Dockerfile_batch .
          docker tag $DOCKER_REGISTRY/$DOCKER_REPOSITORY:$IMAGE_TAG $DOCKER_REGISTRY/$DOCKER_REPOSITORY:latest
          docker push $DOCKER_REGISTRY/$DOCKER_REPOSITORY:$IMAGE_TAG
          docker push $DOCKER_REGISTRY/$DOCKER_REPOSITORY:latest
          echo "::set-output name=image::$DOCKER_REGISTRY/$DOCKER_REPOSITORY:$IMAGE_TAG"
